<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.babcock.server</groupId>
		<artifactId>turbine-server-parent</artifactId>
		<version>1.0.29-SNAPSHOT</version>
	</parent>

	<artifactId>turbine-server</artifactId>
	<version>1.0.29-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<server.jar.name>turbine-server-${project.parent.version}</server.jar.name>
		<executable.jar.postfix>exec</executable.jar.postfix>
		<executable.server.jar.name>${server.jar.name}-${executable.jar.postfix}</executable.server.jar.name>
		<docker.release.version>${project.parent.version}</docker.release.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-hystrix-dashboard</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-turbine-stream</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-stream-rabbit</artifactId>
		</dependency>

		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
			<version>4.9</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>docker-publish</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.21.0</version>
						<executions>
							<execution>
								<id>publish-docker-rc</id>
								<configuration>
									<images>
										<image>
											<name>emtdevelopment/turbine-server:${project.version}-RC</name>
											<build>
												<dockerFileDir>${project.parent.basedir}/turbine-server/target/docker-dist</dockerFileDir>
											</build>
										</image>
									</images>
									<removeAll>true</removeAll>
								</configuration>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
									<goal>remove</goal>
								</goals>
							</execution>
							<execution>
								<id>publish-docker-latest</id>
								<configuration>
									<images>
										<image>
											<name>emtdevelopment/turbine-server:latest</name>
											<build>
												<dockerFileDir>${project.parent.basedir}/turbine-server/target/docker-dist</dockerFileDir>
											</build>
										</image>
									</images>
									<removeAll>true</removeAll>
								</configuration>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
									<goal>remove</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<finalName>${server.jar.name}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/runner</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-docker-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/docker-dist</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/target/classes</directory>
									<includes>
										<include>Dockerfile</include>
										<include>.maven-dockerignore</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-kubernetes-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/target/classes</directory>
									<includes>
										<include>kubernetes/*.*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-springboot-jar</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/docker-dist</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/target</directory>
									<includes>
										<include>${executable.server.jar.name}.jar</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<classifier>${executable.jar.postfix}</classifier>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
